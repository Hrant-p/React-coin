{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\A\\\\Desktop\\\\react-coin\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\A\\\\Desktop\\\\react-coin\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\A\\\\Desktop\\\\react-coin\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\A\\\\Desktop\\\\react-coin\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\A\\\\Desktop\\\\react-coin\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\A\\\\Desktop\\\\react-coin\\\\src\\\\components\\\\detail\\\\Detail.js\";\nimport React from 'react';\nimport { API_URL } from '../../config';\nimport { handleResponse, renderChangePercent } from '../../helpers.js';\nimport Loading from '../common/Loading';\nimport './Detail.css';\n\nvar Detail =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Detail, _React$Component);\n\n  function Detail() {\n    var _this;\n\n    _classCallCheck(this, Detail);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Detail).call(this));\n    _this.state = {\n      currency: {},\n      error: '',\n      loading: false\n    };\n    return _this;\n  }\n\n  _createClass(Detail, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      // Get id from url params\n      var currencyId = this.props.match.params.id; // Fetch currency\n\n      this.fetchCurrency(currencyId);\n    }\n  }, {\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps) {\n      if (this.props.location.pathname !== nextProps.location.pathname) {\n        // Get id from new url params\n        var currencyId = nextProps.match.params.id; // Fetch currency\n\n        this.fetchCurrency(currencyId);\n      }\n    }\n  }, {\n    key: \"fetchCurrency\",\n    value: function fetchCurrency(currencyId) {\n      var _this2 = this;\n\n      // Set loading to true, while we are fetching data from server\n      this.setState({\n        loading: true\n      });\n      fetch(\"\".concat(API_URL, \"/cryptocurrencies/\").concat(currencyId)).then(handleResponse).then(function (currency) {\n        // Set received data in components state\n        // Clear error if any and set loading to false\n        _this2.setState({\n          currency: currency,\n          error: '',\n          loading: false\n        });\n      }).catch(function (error) {\n        // Show error message, if request fails and set loading to false\n        _this2.setState({\n          error: error.errorMessage,\n          loading: false\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          currency = _this$state.currency,\n          loading = _this$state.loading,\n          error = _this$state.error; // Render only loading component, if loading state is set to true\n\n      if (loading) {\n        return React.createElement(\"div\", {\n          className: \"loading-container\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 65\n          },\n          __self: this\n        }, React.createElement(Loading, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 65\n          },\n          __self: this\n        }));\n      } // Render only error message, if error occured while fetching data\n\n\n      if (error) {\n        return React.createElement(\"div\", {\n          className: \"error\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70\n          },\n          __self: this\n        }, error);\n      }\n\n      return React.createElement(\"div\", {\n        className: \"Detail\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        className: \"Detail-heading\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, currency.name, \" (\", currency.symbol, \")\"), React.createElement(\"div\", {\n        className: \"Detail-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"Detail-item\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, \"Price \", React.createElement(\"span\", {\n        className: \"Detail-value\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, \"$ \", currency.price)), React.createElement(\"div\", {\n        className: \"Detail-item\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, \"Rank \", React.createElement(\"span\", {\n        className: \"Detail-value\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, currency.rank)), React.createElement(\"div\", {\n        className: \"Detail-item\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, \"24H change\", React.createElement(\"span\", {\n        className: \"Detail-value\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, renderChangePercent(currency.percentChange24h))), React.createElement(\"div\", {\n        className: \"Detail-item\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"Detail-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, \"Market cap\"), React.createElement(\"span\", {\n        className: \"Detail-dollar\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, \"$\"), currency.marketCap), React.createElement(\"div\", {\n        className: \"Detail-item\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"Detail-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, \"24H Volume\"), React.createElement(\"span\", {\n        className: \"Detail-dollar\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, \"$\"), currency.volume24h), React.createElement(\"div\", {\n        className: \"Detail-item\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"Detail-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, \"Total supply\"), currency.totalSupply)));\n    }\n  }]);\n\n  return Detail;\n}(React.Component);\n\nexport default Detail;","map":{"version":3,"sources":["C:\\Users\\A\\Desktop\\react-coin\\src\\components\\detail\\Detail.js"],"names":["React","API_URL","handleResponse","renderChangePercent","Loading","Detail","state","currency","error","loading","currencyId","props","match","params","id","fetchCurrency","nextProps","location","pathname","setState","fetch","then","catch","errorMessage","name","symbol","price","rank","percentChange24h","marketCap","volume24h","totalSupply","Component"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { API_URL } from '../../config';\r\nimport { handleResponse, renderChangePercent } from '../../helpers.js';\r\nimport Loading from '../common/Loading';\r\nimport './Detail.css';\r\n\r\nclass Detail extends React.Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      currency: {},\r\n      error: '',\r\n      loading: false,\r\n    }\r\n  }\r\n\r\n  componentWillMount() {\r\n    // Get id from url params\r\n    const currencyId = this.props.match.params.id;\r\n\r\n    // Fetch currency\r\n    this.fetchCurrency(currencyId);\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (this.props.location.pathname !== nextProps.location.pathname) {\r\n      // Get id from new url params\r\n      const currencyId = nextProps.match.params.id;\r\n      \r\n      // Fetch currency\r\n      this.fetchCurrency(currencyId);\r\n    }\r\n  }\r\n\r\n  fetchCurrency(currencyId) {\r\n    // Set loading to true, while we are fetching data from server\r\n    this.setState({ loading: true });\r\n\r\n    fetch(`${API_URL}/cryptocurrencies/${currencyId}`)\r\n      .then(handleResponse)\r\n      .then((currency) => {\r\n        // Set received data in components state\r\n        // Clear error if any and set loading to false\r\n        this.setState({\r\n          currency,\r\n          error: '',\r\n          loading: false,\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        // Show error message, if request fails and set loading to false\r\n        this.setState({\r\n          error: error.errorMessage,\r\n          loading: false,\r\n        });\r\n      });\r\n  }\r\n\r\n  render() {\r\n    const { currency, loading, error } = this.state;\r\n\r\n    // Render only loading component, if loading state is set to true\r\n    if (loading) {\r\n      return <div className=\"loading-container\"><Loading /></div>\r\n    }\r\n\r\n    // Render only error message, if error occured while fetching data\r\n    if (error) {\r\n      return <div className=\"error\">{error}</div>\r\n    }\r\n\r\n    return (\r\n      <div className=\"Detail\">\r\n        <h1 className=\"Detail-heading\">\r\n          {currency.name} ({currency.symbol})\r\n        </h1>\r\n\r\n        <div className=\"Detail-container\">\r\n          <div className=\"Detail-item\">\r\n            Price <span className=\"Detail-value\">$ {currency.price}</span>\r\n          </div>\r\n          <div className=\"Detail-item\">\r\n            Rank <span className=\"Detail-value\">{currency.rank}</span>\r\n          </div>\r\n          <div className=\"Detail-item\">\r\n            24H change\r\n            <span className=\"Detail-value\">\r\n              {renderChangePercent(currency.percentChange24h)}\r\n            </span>\r\n          </div>\r\n          <div className=\"Detail-item\">\r\n            <span className=\"Detail-title\">Market cap</span>\r\n            <span className=\"Detail-dollar\">$</span>\r\n            {currency.marketCap}\r\n          </div>\r\n          <div className=\"Detail-item\">\r\n          <span className=\"Detail-title\">24H Volume</span>\r\n            <span className=\"Detail-dollar\">$</span>\r\n            {currency.volume24h}\r\n          </div>\r\n          <div className=\"Detail-item\">\r\n            <span className=\"Detail-title\">Total supply</span>\r\n            {currency.totalSupply}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Detail;\r\n"]},"metadata":{},"sourceType":"module"}