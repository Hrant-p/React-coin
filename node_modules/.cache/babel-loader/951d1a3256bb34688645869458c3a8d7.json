{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\A\\\\Desktop\\\\react-coin\\\\react-coin\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\A\\\\Desktop\\\\react-coin\\\\react-coin\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\A\\\\Desktop\\\\react-coin\\\\react-coin\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\A\\\\Desktop\\\\react-coin\\\\react-coin\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\A\\\\Desktop\\\\react-coin\\\\react-coin\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\A\\\\Desktop\\\\react-coin\\\\react-coin\\\\src\\\\components\\\\list\\\\list.js\";\nimport React from 'react';\nimport { handleResponse } from '../../helpers';\nimport { API_URL } from '../../config';\nimport Loading from '../common/Loading';\nimport './Table.css';\n\nvar List =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(List, _React$Component);\n\n  function List() {\n    var _this;\n\n    _classCallCheck(this, List);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(List).call(this));\n    _this.state = {\n      loading: false,\n      currencies: [],\n      error: null\n    };\n    return _this;\n  }\n\n  _createClass(List, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      this.setState({\n        loading: true\n      });\n      fetch(\"\".concat(API_URL, \"/cryptocurrencies?page=1&perPage=20\")).then(handleResponse).then(function (data) {\n        _this2.setState({\n          currencies: data.currencies,\n          loading: true\n        });\n      }).catch(function (error) {\n        _this2.setState({\n          error: error.errorMessage,\n          loading: false\n        });\n      });\n    }\n  }, {\n    key: \"renderChangePercent\",\n    value: function renderChangePercent(percent) {\n      if (percent > 0) {\n        return React.createElement(\"span\", {\n          className: \"percent-raised\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 40\n          },\n          __self: this\n        }, percent, \"% \\u2191\");\n      } else if (percent < 0) {\n        return React.createElement(\"span\", {\n          className: \"percent-fallen\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 42\n          },\n          __self: this\n        }, percent, \"% \\u2193\");\n      } else {\n        return React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 44\n          },\n          __self: this\n        }, percent);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var _this$state = this.state,\n          loading = _this$state.loading,\n          error = _this$state.error,\n          currencies = _this$state.currencies; // render only loading component, if loading state is set to true\n\n      if (loading) {\n        return React.createElement(\"div\", {\n          className: \"loading-container\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 53\n          },\n          __self: this\n        }, React.createElement(Loading, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 53\n          },\n          __self: this\n        }));\n      } // render only error message, if error occurred while fetching data\n\n\n      if (error) {\n        return React.createElement(\"div\", {\n          className: \"error\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 58\n          },\n          __self: this\n        }, error);\n      }\n\n      console.log(loading, error, currencies);\n      return React.createElement(\"div\", {\n        className: \"Table-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, React.createElement(\"table\", {\n        className: \"Table\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, React.createElement(\"thead\", {\n        className: \"Table-head\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, \"Cryptocurrency\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, \"Price\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, \"Market Cap\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, \"24H Change\"))), React.createElement(\"tbody\", {\n        className: \"Table-body\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, currencies.map(function (currency) {\n        return React.createElement(\"tr\", {\n          key: currency.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 76\n          },\n          __self: this\n        }, React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 77\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          className: \"Table-rank\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 78\n          },\n          __self: this\n        }, currency.rank), currency.name), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 81\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          className: \"Table-dollar\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 82\n          },\n          __self: this\n        }, \"$ \", currency.price)), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 84\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          className: \"Table-dollar\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 85\n          },\n          __self: this\n        }, \"$ \", currency.marketCap)), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 87\n          },\n          __self: this\n        }, _this3.renderChangePercent(currency.percentChange24h)));\n      }))));\n    }\n  }]);\n\n  return List;\n}(React.Component);\n\nexport default List;","map":{"version":3,"sources":["C:\\Users\\A\\Desktop\\react-coin\\react-coin\\src\\components\\list\\list.js"],"names":["React","handleResponse","API_URL","Loading","List","state","loading","currencies","error","setState","fetch","then","data","catch","errorMessage","percent","console","log","map","currency","id","rank","name","price","marketCap","renderChangePercent","percentChange24h","Component"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { handleResponse } from '../../helpers';\r\nimport { API_URL } from '../../config';\r\nimport Loading from '../common/Loading';\r\nimport './Table.css';\r\n\r\nclass List extends React.Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      loading: false,\r\n      currencies: [],\r\n      error: null,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({ loading: true });\r\n    \r\n    fetch(`${API_URL}/cryptocurrencies?page=1&perPage=20`)\r\n      .then(handleResponse)\r\n      .then((data) => {\r\n        this.setState({\r\n          currencies: data.currencies,\r\n          loading: true,\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        this.setState({\r\n          error: error.errorMessage,\r\n          loading: false,\r\n        });\r\n      });\r\n      \r\n  }\r\n\r\n    renderChangePercent(percent) {\r\n      if (percent > 0) {\r\n        return <span className=\"percent-raised\">{percent}% &uarr;</span>\r\n      } else if (percent < 0) {\r\n        return <span className=\"percent-fallen\">{percent}% &darr;</span>\r\n      } else {\r\n        return <span>{percent}</span>\r\n      }\r\n    }\r\n\r\n  render() {\r\n    const { loading, error, currencies } = this.state;\r\n\r\n    // render only loading component, if loading state is set to true\r\n    if (loading) {\r\n      return <div className=\"loading-container\"><Loading /></div>\r\n    }\r\n\r\n    // render only error message, if error occurred while fetching data\r\n    if (error) {\r\n      return <div className=\"error\">{error}</div>\r\n    }\r\n\r\n    console.log(loading, error, currencies)\r\n\r\n    return (\r\n      <div className=\"Table-container\"> \r\n        <table className=\"Table\">\r\n          <thead className=\"Table-head\">\r\n            <tr>\r\n              <th>Cryptocurrency</th>\r\n              <th>Price</th>\r\n              <th>Market Cap</th>\r\n              <th>24H Change</th>  \r\n            </tr>    \r\n          </thead>\r\n          <tbody className=\"Table-body\">\r\n          {currencies.map((currency) => (\r\n            <tr key={currency.id}>\r\n              <td>\r\n                <span className=\"Table-rank\">{currency.rank}</span>\r\n                {currency.name}\r\n              </td>\r\n              <td>\r\n                <span className=\"Table-dollar\">$ {currency.price}</span>\r\n              </td>\r\n              <td>\r\n                <span className=\"Table-dollar\">$ {currency.marketCap}</span>\r\n              </td>\r\n              <td>\r\n                {this.renderChangePercent(currency.percentChange24h)}\r\n              </td>\r\n            </tr> \r\n          ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default List;\r\n"]},"metadata":{},"sourceType":"module"}