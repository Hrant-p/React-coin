{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\A\\\\Desktop\\\\react-coin\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\A\\\\Desktop\\\\react-coin\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\A\\\\Desktop\\\\react-coin\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\A\\\\Desktop\\\\react-coin\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\A\\\\Desktop\\\\react-coin\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\A\\\\Desktop\\\\react-coin\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"C:\\\\Users\\\\A\\\\Desktop\\\\react-coin\\\\src\\\\components\\\\list\\\\List.js\";\nimport React from 'react';\nimport { handleResponse } from '../../helpers';\nimport { API_URL } from '../../config';\nimport Loading from '../common/Loading';\nimport './Table.css';\nimport Table from './Table';\nimport Pagination from './pagination';\n\nvar List =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(List, _React$Component);\n\n  function List() {\n    var _this;\n\n    _classCallCheck(this, List);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(List).call(this));\n    _this.state = {\n      loading: false,\n      currencies: [],\n      error: null,\n      page: 1\n    };\n    _this.handlePaginationClick = _this.handlePaginationClick.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(List, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      this.setState({\n        loading: true\n      });\n      var page = this.state.page;\n      fetch(\"\".concat(API_URL, \"/cryptocurrencies?page=\").concat(page, \"&perPage=20\")).then(handleResponse).then(function (data) {\n        _this2.setState({\n          currencies: data.currencies,\n          loading: false\n        });\n      }).catch(function (error) {\n        _this2.setState({\n          error: error.errorMessage,\n          loading: false\n        });\n      });\n    }\n  }, {\n    key: \"renderChangePercent\",\n    value: function renderChangePercent(percent) {\n      if (percent > 0) {\n        return React.createElement(\"span\", {\n          className: \"percent-raised\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 51\n          },\n          __self: this\n        }, percent, \"% \\u2191\");\n      } else if (percent < 0) {\n        return React.createElement(\"span\", {\n          className: \"percent-fallen\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 53\n          },\n          __self: this\n        }, percent, \"% \\u2193\");\n      } else {\n        return React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 55\n          },\n          __self: this\n        }, percent);\n      }\n    }\n  }, {\n    key: \"handlePaginationClick\",\n    value: function handlePaginationClick(direction) {\n      var nextPage = this.state.page;\n      nextPage = direction === 'next' ? nextPage + 1 : nextPage - 1;\n      this.setState({\n        page: nextPage\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      console.log(this.state.page);\n      var _this$state = this.state,\n          loading = _this$state.loading,\n          error = _this$state.error,\n          currencies = _this$state.currencies; // render only loading component, if loading state is set to true\n\n      if (loading) {\n        return React.createElement(\"div\", {\n          className: \"loading-container\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 73\n          },\n          __self: this\n        }, React.createElement(Loading, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 73\n          },\n          __self: this\n        }));\n      } // render only error message, if error occurred while fetching data\n\n\n      if (error) {\n        return React.createElement(\"div\", {\n          className: \"error\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 78\n          },\n          __self: this\n        }, error);\n      }\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, React.createElement(Table, {\n        currencies: currencies,\n        renderChangePercent: this.renderChangePercent,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }), React.createElement(Pagination, {\n        handlePaginationClick: this.handlePaginationClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return List;\n}(React.Component);\n\nexport default List;","map":{"version":3,"sources":["C:\\Users\\A\\Desktop\\react-coin\\src\\components\\list\\List.js"],"names":["React","handleResponse","API_URL","Loading","Table","Pagination","List","state","loading","currencies","error","page","handlePaginationClick","bind","setState","fetch","then","data","catch","errorMessage","percent","direction","nextPage","console","log","renderChangePercent","Component"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { handleResponse } from '../../helpers';\r\nimport { API_URL } from '../../config';\r\nimport Loading from '../common/Loading';\r\nimport './Table.css';\r\nimport Table from './Table';\r\nimport Pagination from './pagination';\r\n\r\n\r\n\r\nclass List extends React.Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      loading: false,\r\n      currencies: [],\r\n      error: null,\r\n      page: 1\r\n    };\r\n\r\n    this.handlePaginationClick = this.handlePaginationClick.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({ loading: true });\r\n\r\n    const { page } = this.state;\r\n    \r\n    fetch(`${API_URL}/cryptocurrencies?page=${page}&perPage=20`)\r\n      .then(handleResponse)\r\n      .then((data) => {\r\n        this.setState({\r\n          currencies: data.currencies,\r\n          loading: false,\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        this.setState({\r\n          error: error.errorMessage,\r\n          loading: false,\r\n        });\r\n      });\r\n  }\r\n\r\n    renderChangePercent(percent) {\r\n\r\n    \r\n\r\n      if (percent > 0) {\r\n        return <span className=\"percent-raised\">{percent}% &uarr;</span>\r\n      } else if (percent < 0) {\r\n        return <span className=\"percent-fallen\">{percent}% &darr;</span>\r\n      } else {\r\n        return <span>{percent}</span>\r\n      }\r\n    }\r\n\r\n    handlePaginationClick(direction){\r\n      let nextPage = this.state.page;\r\n      nextPage = direction === 'next' ? nextPage + 1 : nextPage - 1;\r\n      this.setState({page: nextPage})\r\n    }\r\n\r\n\r\n  render() {\r\n    console.log(this.state.page)\r\n    \r\n    const { loading, error, currencies } = this.state;\r\n\r\n    // render only loading component, if loading state is set to true\r\n    if (loading) {\r\n      return <div className=\"loading-container\"><Loading /></div>\r\n    }\r\n\r\n    // render only error message, if error occurred while fetching data\r\n    if (error) {\r\n      return <div className=\"error\">{error}</div>\r\n    }\r\n\r\n    return (\r\n       <div>\r\n         <Table \r\n            currencies = {currencies} \r\n            renderChangePercent = {this.renderChangePercent} \r\n            />\r\n        <Pagination handlePaginationClick = {this.handlePaginationClick}/>\r\n\r\n       </div>\r\n\r\n    )\r\n      \r\n  }\r\n}\r\n\r\nexport default List;\r\n"]},"metadata":{},"sourceType":"module"}