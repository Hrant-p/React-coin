{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\A\\\\Desktop\\\\react-coin\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\A\\\\Desktop\\\\react-coin\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\A\\\\Desktop\\\\react-coin\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\A\\\\Desktop\\\\react-coin\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\A\\\\Desktop\\\\react-coin\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\A\\\\Desktop\\\\react-coin\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"C:\\\\Users\\\\A\\\\Desktop\\\\react-coin\\\\src\\\\components\\\\common\\\\Search.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router-dom';\nimport { handleResponse } from '../../helpers.js';\nimport Loading from '../common/Loading';\nimport { API_URL } from '../../config';\nimport './Search.css';\n\nvar Search =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Search, _React$Component);\n\n  function Search() {\n    var _this;\n\n    _classCallCheck(this, Search);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Search).call(this));\n    _this.state = {\n      searchResults: [],\n      searchQuery: '',\n      loading: false\n    };\n    _this.handleRedirect = _this.handleRedirect.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(Search, [{\n    key: \"handleChange\",\n    value: function handleChange(e) {\n      var _this2 = this;\n\n      var searchQuery = e.target.value;\n      this.setState({\n        searchQuery: searchQuery\n      }); // If searchQuery isn't present, don't send request to server\n\n      if (!searchQuery) {\n        return false;\n      } // Set loading to true, while we are fetching data from server\n\n\n      this.setState({\n        loading: true\n      });\n      fetch(\"\".concat(API_URL, \"/autocomplete?searchQuery=\").concat(searchQuery)).then(handleResponse).then(function (result) {\n        _this2.setState({\n          searchResults: result,\n          loading: false\n        });\n      });\n    }\n  }, {\n    key: \"handleRedirect\",\n    value: function handleRedirect(currencyId) {\n      // Clear input value and close autocomplete container,\n      // by clearing searchQuery state\n      this.setState({\n        searchQuery: '',\n        searchResults: []\n      }); // Redirect to currency page\n\n      this.props.history.push(\"/currency/\".concat(currencyId));\n    }\n  }, {\n    key: \"renderSearchResults\",\n    value: function renderSearchResults() {\n      var _this3 = this;\n\n      var _this$state = this.state,\n          searchResults = _this$state.searchResults,\n          searchQuery = _this$state.searchQuery,\n          loading = _this$state.loading;\n\n      if (!searchQuery) {\n        return '';\n      }\n\n      if (searchResults.length > 0) {\n        return React.createElement(\"div\", {\n          className: \"Search-result-container\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67\n          },\n          __self: this\n        }, searchResults.map(function (result) {\n          return React.createElement(\"div\", {\n            key: result.id,\n            className: \"Search-result\",\n            onClick: function onClick() {\n              return _this3.handleRedirect(result.id);\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 69\n            },\n            __self: this\n          }, result.name, \" (\", result.symbol, \")\");\n        }));\n      } // Send no result, only if loading is set to false\n      // To avoid showing no result, when actually there are ones\n\n\n      if (!loading) {\n        return React.createElement(\"div\", {\n          className: \"Search-result-container\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 85\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"Search-no-result\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 86\n          },\n          __self: this\n        }, \"No results found.\"));\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state2 = this.state,\n          searchQuery = _this$state2.searchQuery,\n          loading = _this$state2.loading;\n      return React.createElement(\"div\", {\n        className: \"Search\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"Search-icon\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        onChange: this.handleChange,\n        type: \"text\",\n        className: \"Search-input\",\n        placeholder: \"Currency name\",\n        value: searchQuery,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }), loading && React.createElement(\"div\", {\n        className: \"Search-loading\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, React.createElement(Loading, {\n        width: \"12px\",\n        height: \"12px\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }))), this.renderSearchResults());\n    }\n  }]);\n\n  return Search;\n}(React.Component);\n\nSearch.propTypes = {\n  history: PropTypes.object.isRequired\n};\nexport default withRouter(Search);","map":{"version":3,"sources":["C:\\Users\\A\\Desktop\\react-coin\\src\\components\\common\\Search.js"],"names":["React","PropTypes","withRouter","handleResponse","Loading","API_URL","Search","state","searchResults","searchQuery","loading","handleRedirect","bind","handleChange","e","target","value","setState","fetch","then","result","currencyId","props","history","push","length","map","id","name","symbol","renderSearchResults","Component","propTypes","object","isRequired"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,cAAT,QAA+B,kBAA/B;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,SAASC,OAAT,QAAwB,cAAxB;AACA,OAAO,cAAP;;IAEMC,M;;;;;AACJ,oBAAc;AAAA;;AAAA;;AACZ;AAEA,UAAKC,KAAL,GAAa;AACXC,MAAAA,aAAa,EAAE,EADJ;AAEXC,MAAAA,WAAW,EAAE,EAFF;AAGXC,MAAAA,OAAO,EAAE;AAHE,KAAb;AAMA,UAAKC,cAAL,GAAsB,MAAKA,cAAL,CAAoBC,IAApB,uDAAtB;AACA,UAAKC,YAAL,GAAoB,MAAKA,YAAL,CAAkBD,IAAlB,uDAApB;AAVY;AAWb;;;;iCAEYE,C,EAAG;AAAA;;AACd,UAAML,WAAW,GAAGK,CAAC,CAACC,MAAF,CAASC,KAA7B;AAEA,WAAKC,QAAL,CAAc;AAAER,QAAAA,WAAW,EAAXA;AAAF,OAAd,EAHc,CAKd;;AACA,UAAI,CAACA,WAAL,EAAkB;AAChB,eAAO,KAAP;AACD,OARa,CAUd;;;AACA,WAAKQ,QAAL,CAAc;AAAEP,QAAAA,OAAO,EAAE;AAAX,OAAd;AAEAQ,MAAAA,KAAK,WAAIb,OAAJ,uCAAwCI,WAAxC,EAAL,CACGU,IADH,CACQhB,cADR,EAEGgB,IAFH,CAEQ,UAACC,MAAD,EAAY;AAChB,QAAA,MAAI,CAACH,QAAL,CAAc;AACZT,UAAAA,aAAa,EAAEY,MADH;AAEZV,UAAAA,OAAO,EAAE;AAFG,SAAd;AAID,OAPH;AAQD;;;mCAEcW,U,EAAY;AACzB;AACA;AACA,WAAKJ,QAAL,CAAc;AACZR,QAAAA,WAAW,EAAE,EADD;AAEZD,QAAAA,aAAa,EAAE;AAFH,OAAd,EAHyB,CAQzB;;AACA,WAAKc,KAAL,CAAWC,OAAX,CAAmBC,IAAnB,qBAAqCH,UAArC;AACD;;;0CAEqB;AAAA;;AAAA,wBAC4B,KAAKd,KADjC;AAAA,UACZC,aADY,eACZA,aADY;AAAA,UACGC,WADH,eACGA,WADH;AAAA,UACgBC,OADhB,eACgBA,OADhB;;AAGpB,UAAI,CAACD,WAAL,EAAkB;AAChB,eAAO,EAAP;AACD;;AAED,UAAID,aAAa,CAACiB,MAAd,GAAuB,CAA3B,EAA8B;AAC5B,eACE;AAAK,UAAA,SAAS,EAAC,yBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACGjB,aAAa,CAACkB,GAAd,CAAkB,UAAAN,MAAM;AAAA,iBACvB;AACE,YAAA,GAAG,EAAEA,MAAM,CAACO,EADd;AAEE,YAAA,SAAS,EAAC,eAFZ;AAGE,YAAA,OAAO,EAAE;AAAA,qBAAM,MAAI,CAAChB,cAAL,CAAoBS,MAAM,CAACO,EAA3B,CAAN;AAAA,aAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAKGP,MAAM,CAACQ,IALV,QAKkBR,MAAM,CAACS,MALzB,MADuB;AAAA,SAAxB,CADH,CADF;AAaD,OArBmB,CAuBpB;AACA;;;AACA,UAAI,CAACnB,OAAL,EAAc;AACZ,eACE;AAAK,UAAA,SAAS,EAAC,yBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAK,UAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BADF,CADF;AAOD;AACF;;;6BAEQ;AAAA,yBAC0B,KAAKH,KAD/B;AAAA,UACCE,WADD,gBACCA,WADD;AAAA,UACcC,OADd,gBACcA,OADd;AAGP,aACE;AAAK,QAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAM,QAAA,SAAS,EAAC,aAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE;AACE,QAAA,QAAQ,EAAE,KAAKG,YADjB;AAEE,QAAA,IAAI,EAAC,MAFP;AAGE,QAAA,SAAS,EAAC,cAHZ;AAIE,QAAA,WAAW,EAAC,eAJd;AAKE,QAAA,KAAK,EAAEJ,WALT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,EAUGC,OAAO,IACN;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,OAAD;AACE,QAAA,KAAK,EAAC,MADR;AAEE,QAAA,MAAM,EAAC,MAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CAXJ,CADF,EAoBG,KAAKoB,mBAAL,EApBH,CADF;AAwBD;;;;EAhHkB9B,KAAK,CAAC+B,S;;AAmH3BzB,MAAM,CAAC0B,SAAP,GAAmB;AACjBT,EAAAA,OAAO,EAAEtB,SAAS,CAACgC,MAAV,CAAiBC;AADT,CAAnB;AAIA,eAAehC,UAAU,CAACI,MAAD,CAAzB","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { handleResponse } from '../../helpers.js';\r\nimport Loading from '../common/Loading';\r\nimport { API_URL } from '../../config';\r\nimport './Search.css';\r\n\r\nclass Search extends React.Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      searchResults: [],\r\n      searchQuery: '',\r\n      loading: false,\r\n    }\r\n\r\n    this.handleRedirect = this.handleRedirect.bind(this);\r\n    this.handleChange = this.handleChange.bind(this);\r\n  }\r\n\r\n  handleChange(e) {\r\n    const searchQuery = e.target.value;\r\n\r\n    this.setState({ searchQuery });\r\n\r\n    // If searchQuery isn't present, don't send request to server\r\n    if (!searchQuery) {\r\n      return false;\r\n    }\r\n\r\n    // Set loading to true, while we are fetching data from server\r\n    this.setState({ loading: true });\r\n\r\n    fetch(`${API_URL}/autocomplete?searchQuery=${searchQuery}`)\r\n      .then(handleResponse)\r\n      .then((result) => {\r\n        this.setState({\r\n          searchResults: result,\r\n          loading: false,\r\n        });\r\n      });\r\n  }\r\n\r\n  handleRedirect(currencyId) {\r\n    // Clear input value and close autocomplete container,\r\n    // by clearing searchQuery state\r\n    this.setState({\r\n      searchQuery: '',\r\n      searchResults: [],\r\n    });\r\n\r\n    // Redirect to currency page\r\n    this.props.history.push(`/currency/${currencyId}`);\r\n  }\r\n\r\n  renderSearchResults() {\r\n    const { searchResults, searchQuery, loading } = this.state;\r\n\r\n    if (!searchQuery) {\r\n      return '';\r\n    }\r\n    \r\n    if (searchResults.length > 0) {\r\n      return (\r\n        <div className=\"Search-result-container\">\r\n          {searchResults.map(result =>\r\n            <div\r\n              key={result.id}\r\n              className=\"Search-result\"\r\n              onClick={() => this.handleRedirect(result.id)}\r\n            >\r\n              {result.name} ({result.symbol})\r\n            </div>\r\n          )}\r\n        </div>\r\n      )\r\n    }\r\n\r\n    // Send no result, only if loading is set to false\r\n    // To avoid showing no result, when actually there are ones\r\n    if (!loading) {\r\n      return (\r\n        <div className=\"Search-result-container\">\r\n          <div className=\"Search-no-result\">\r\n            No results found.\r\n          </div>\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { searchQuery, loading } = this.state;\r\n\r\n    return (\r\n      <div className='Search'>\r\n        <div>\r\n          <span className=\"Search-icon\" />\r\n          <input \r\n            onChange={this.handleChange}\r\n            type=\"text\"\r\n            className=\"Search-input\"\r\n            placeholder=\"Currency name\"\r\n            value={searchQuery}\r\n          />\r\n\r\n          {loading &&\r\n            <div className=\"Search-loading\">\r\n              <Loading\r\n                width=\"12px\"\r\n                height=\"12px\"\r\n              />\r\n            </div>}\r\n        </div>\r\n\r\n        {this.renderSearchResults()}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nSearch.propTypes = {\r\n  history: PropTypes.object.isRequired,\r\n}\r\n\r\nexport default withRouter(Search);\r\n"]},"metadata":{},"sourceType":"module"}